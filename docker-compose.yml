# docker-compose.yml

networks:
  app-net: {}   # ← 고정 이름으로 정의

volumes:
  pgdata:

services:
  postgres:
    image: postgres:15
    container_name: ${COMPOSE_PROJECT_NAME}-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - app-net
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./schema:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10

  localstack:
    image: localstack/localstack:latest
    container_name: ${COMPOSE_PROJECT_NAME}-localstack
    restart: unless-stopped
    environment:
      - SERVICES=sqs
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - EDGE_PORT=${LOCALSTACK_EDGE_PORT}
      - DEBUG=0
    ports:
      - "${LOCALSTACK_EDGE_PORT}:4566"
    networks:
      - app-net
    volumes:
      - "./.localstack:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    # awslocal이 없는 이미지일 수도 있으니 aws로 헬스체크
    healthcheck:
      test: ["CMD", "bash", "-lc", "aws --endpoint-url=http://localhost:4566 sqs list-queues >/dev/null 2>&1 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 20
